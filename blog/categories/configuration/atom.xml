<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: configuration | i am rohn]]></title>
  <link href="http://rohn.github.com/blog/categories/configuration/atom.xml" rel="self"/>
  <link href="http://rohn.github.com/"/>
  <updated>2012-11-15T13:44:00-06:00</updated>
  <id>http://rohn.github.com/</id>
  <author>
    <name><![CDATA[rohn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Backbone.js with Pow]]></title>
    <link href="http://rohn.github.com/blog/2012/11/11/backbone-dot-js-with-pow/"/>
    <updated>2012-11-11T09:23:00-06:00</updated>
    <id>http://rohn.github.com/blog/2012/11/11/backbone-dot-js-with-pow</id>
    <content type="html"><![CDATA[<p>I found myself in a situation where I needed to serve a <em>static</em> site (in reality a Backbone.js webapp) through my running Pow! installation. The solution was extremely easy to find but I thought I'd list it here anyway.</p>

<p>The documentation indicates that your folder structure must include a public folder inside your project folder. This would have conflicted with the directory structure of the application that I'm contributing to, so I simply wrapped my project folder with a company folder, which in turn holds the public folder:
<code>
/Users/username/Sites/mycompany/public/myproject
</code>
or another way to view that is:
```
/Users/username/Sites/
  mycompany/</p>

<pre><code>public/
  myproject/
  myotherproject/
</code></pre>

<p><code>
You still need to create the symbolic link from your site's directory
</code>
cd ~/.pow
ln -s ~/Sites/mycompany
<code>
and now you simply access your static site via:
</code>
http://mycompany.dev/myproject/
```</p>

<p>Of course the easiest (perhaps better) solution is to install the <a href="https://github.com/rodreegez/powder">powder gem</a> and manually bring down the pow server when working on your non-pow projects.</p>
]]></content>
  </entry>
  
</feed>
